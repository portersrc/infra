name: Porter GHA Testing
run-name: ${{ github.actor }} is doing the porter GHA testing
on: [push]
jobs:
  Explore-GitHub-Actions:
    env:
      RUSTC_VERSION: 1.72.0
    #runs-on: ubuntu-22.04
    runs-on: ubuntu-24.04
    #runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check out guest-components
        uses: actions/checkout@v4
        with:
          repository: confidential-containres/guest-components
          ref: refs/heads/main
      - name: Launch coco-keyprovider
        run: |
          cd attestation-agent/coco_keyprovider
          RUST_LOG=coco_keyprovider cargo run --release -- --socket 127.0.0.1:50000
      #- name: Import github@runner.com key
      #  working-directory: container-images
      #  run: gpg --batch --import keys/sign/github-runner.keys
      #- name: Install expect
      #  run: sudo apt-get install -y expect
      #- name: Install cosign
      #  uses: sigstore/cosign-installer@main
      #  with:
      #    cosign-release: "v2.4.1"
      #- name: Log in to ghcr
      #  uses: docker/login-action@v3
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      ## 1. unsig (works)
      #- name: Make unsig
      #  working-directory: container-images
      #  run: make unsig
      ## 2. cosign-sig (works)
      #- name: Make cosign-sig
      #  working-directory: container-images
      #  env:
      #    COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      #  run: make cosign-sig
      ## 3. simple-sig
      #- name: Make simple-sig
      #  working-directory: container-images
      #  run: make simple-sig
      #- name: runc version check
      #  run: |
      #    runc --version
      #- name: Basic echo and docker version
      #  run: |
      #    echo "Start 1"
      #    docker --version
      #    echo "End"
      #- name: Check if gcc is here
      #  run: |
      #    gcc -dumpmachine
      #- name: What is my whatever
      #  run: |
      #    which clang
      #- name: build main.c
      #  working-directory: try-static-link
      #  run: |
      #    gcc main.c
      #    ldd a.out
      #- name: build main.c with static link
      #  working-directory: try-static-link
      #  run: |
      #    gcc -static main.c
      #    ldd a.out
      #- name: Check for oras
      #  run: |
      #    oras --help
      #- name: Check for rustc
      #  run: |
      #    rustc --version
      #- name: Check gpg
      #  run: |
      #    gpg --version
      #- name: Rust toolchain installation
      #  uses: actions-rs/toolchain@v1
      #  with:
      #    profile: minimal
      #    toolchain: ${{ env.RUSTC_VERSION }}
      #    override: true
      #    components: rustfmt, clippy
      #    target: x86_64-unknown-linux-gnu
